/* 
 * Filename: css/arrivals.css
 * 
 * Programmers: Daniel Brook, UMass Lowell Student (daniel_brook@student.uml.edu)
 *              Austin Veino, UMass Lowell Student (austin_veino@student.uml.edu)
 *              Jivani Cassar, UMass Lowell Student (jivani_cassar@student.uml.edu)
 *
 * Page updated by Daniel Brook on 2013-03-24 at 6:30 PM
 *
 * This style sheet will control the layout of widgets and other visual 
 * elements on the arrivals page. The major accomplishments will be to do:
 * 
 *  - One large heading / title bar area that's transparent, and holds
 *      the various control widgets.
 *  - A secondary heading which contains the station name and an array of
 *      "orbs" that will indicate which lines are present / displayed.
 *  - The station arrival data in a tabular form
 *  - Green Line data if it's necessary
 *  - Bus connection information
 *  - Alert information
 */

/*
 * Have the toolbar div show up like a toolbar, stretching the width of the
 * available screen space, and override the list structure's default rendering.
 * This requires the body to stretch all the way to the edges as well.
 * Took some ideas from:
 * http://www.cssnewbie.com/super-simple-horizontal-navigation-bar/
 * 
 * Also a background image from subtle-patterns.com
 */
body {
  margin : 0px auto;
  
/*  overflow-y : hidden;    /* Make the page NOT scroll since the content height
                           will always be within confines of the window */
  background-image : url("../img/honey_im_subtle.png");
}
 
#toolbar {
  width             : 100%;
  display           : table;
  margin            : 0 0 -5px 0;
  padding           : 0;
  background-color  : #222222;
  background-image  : url("black-tie/images/ui-bg_diagonals-thick_8_333333_40x40.png");
/*  background-color  : #f5d89d; */ /* The soft orange */
  box-shadow        : 0px 5px 3px gray;
  border-bottom     : 1px solid black;
  line-height       : 3.3em;
}
 
#toolbar div {
  display    : table-cell;
  padding    : 0px 10px;
}

#refreshDiv {
  display    : table-cell;
  width      : 100%;
  color      : white;
  text-align : center;
}

/*
 * This rule makes text abutting the icons in the toolbar show up vertically
 * "middled" alongside said icons.
 */
#toolbar img {
  vertical-align: middle;
}

/*
 * This section lays out the station name (a header) and the associated lines
 */
#dynContentArea {
  width     : 1000px;
  margin-right: auto;
  margin-left : auto;
}

/* Make all sub headings within the dynamic content area more compact */
#dynContentArea h2 {
  font-family: Tahoma, Arial, sans-serif;
  margin : 5px 0;
  text-align: center;
}

#nameArea {
  background-color : #aaaaaa;
  padding   : 5px 12px;
/*  border-bottom : black solid 2px;
  border-top    : black solid 2px;*/
  clear : both;
}

#nameArea h1 {
  display : inline;
  font-family : Tahoma, Arial, sans-serif;
}

#nameArea #lineList {
  display : inline;
  float : right;
  height : 50px;
  margin : -5px -10px 0 0;
  padding : 0;
}

#nameArea #lineList ul {
  list-style : none;
  margin : -5px 0 0 0;
}
 
#nameArea ul li {
  float      : left;
  padding    : 5px;
}


/*
 * Now do the layout for the arrival details themselves
 */
#arrivalsArea {
  /*
   * Show a scroll bar always, this is so the user can see the whole
   * interface while still looking at arrival predictions.
   */
  overflow-y : scroll;
  
  /*
   * Must float left (and the supplemental region to the right must float right)
   * in order to prevent weirdness when scaling up/down like having them jump
   * below or atop one another.
   */
  float : left;
  width : 470px;
  padding : 5px 5px 0 5px;
  margin-left : 0px;
  margin-right : 1px;
  background : #aaaaaa;
  /* 
   * Make the predictions appear next to the canvas widget. 
   */
  display : inline-block;
  
  /*
   * The neighboring div makes the arrivals appear to the lower left
   * unless the vertical align is pushed up.
   */
  vertical-align: top;
}

#greenArea {
}

#predictArea {
}

/*
 * Since CSS lets us align divs in tabular form, but with a much cleaner
 * structure than pure HTML tables, we use this layout. The subsequent rules
 * beneath the tableShell class are what deal with this option.
 */
.tableShell {
  display : table;
  border-spacing : 0 5px;
  font-family : Tahoma, Arial, sans-serif;
  
  /*
   * To change the size of the font displayed in the arrival data, just change
   * THIS instance of font-size, and the difference will cascade to the children
   */
  font-size : 0.70em;
  
  /*
   * While the containing DIVs will be centered, the arrival tables
   * may (as in definitely won't) follow that convention, so center these, too.
   */
  margin-left : auto;
  margin-right : auto;
}

.tableShell .trip {
  display : table-row;
  
  /*
   * Minimum Height
   */
  height: 5.7em;
}

.tableShell .trip .route {
  vertical-align : middle;
  text-align : center;
  display : table-cell;
  border-top : solid black 3px;
  border-left : solid black 3px;
  border-bottom : solid black 3px;
  font-weight : bold;
  font-size : 2.2em;
  color : white;
  width : 3em;            /* Should give plenty of room for abbrevs */
  border-radius : 10px 0 0 10px;
}

.tableShell .trip .destInfo {
  background-color : black;
  border-top : solid black 3px;
  border-bottom : solid black 3px;
  color : white;
  display : table-cell;
  font-size : 1.3em;
  width : 15em;
  vertical-align : middle;
  padding : 10px 15px;
}

.tableShell .trip .destInfo .destination {
  font-weight : bold;
  font-size   : 1.1em;
}

.tableShell .trip .destInfo .tripInfo {
/*    font-weight : bold;*/
  font-size : .8em;
}

.tableShell .trip .countdown {
  font-size : 1.5em;
  background-color : #222222;
  color : white;
  display : table-cell;
  border-top : solid black 3px;
  border-right : solid black 3px;
  border-bottom : solid black 3px;
  vertical-align : middle;
  text-align : right;
  border-radius : 0 10px 10px 0;
  padding : 10px 20px;
  width : 5em;
}

.tableShell .trip .countdown .note {
  font-size : 0.8em;
}

/*
 * In case the scheduledTime class is added at the same level as
 * the countdown div, format the whole thing w/ a diff. theme.
 */
.tableShell .trip .countdown.scheduled {
  background-color : #dddddd;
  color : black;
}

.tableShell .trip .countdown.approaching {
  background-color : #00ffff;
  color : black;
  text-align : center;
  font-weight : bold;
}

.tableShell .trip .countdown.arriving {
  background-color : #00ff00;
  color : black;
  text-align : center;
  font-weight : bold;
}

.tableShell .trip .countdown.departing {
  background-color : #ff0000;
  color : black;
  text-align : center;
  font-weight : bold;
}


/*
 * The organized-list arrival times (compressed view) visual configuration
 * 
 */
.sortArrival {
/*  background-color : black;*/
/*  color          : white;*/
  font-family    : Tahoma, Arial, sans-serif;
  list-style     : none;
  padding-left   : 0px;
/*  padding-bottom : 5px;     /* Breathing room beneath each route */
  font-size      : 1.5em;   /* Big font to separate route */
  margin         : 2px;
  border         : 3px solid black;
  border-radius  : 10px;
}

.sortArrival .route {
  font-weight   : bold;
  text-align    : center;
  padding       : 5px;
  border-radius : 7px 7px 0px 0px;
  color         : white;
}

.sortArrival .destination {
  font-size   : 0.8em;
  font-weight : bold;
  padding     : 10px 5px 5px 5px;
  border-top  : 2px solid black;
}

/*
 * Outbound trains should be treated specially, since they cannot be
 * sorted in as concise a way as the inbound arrivals (which have the same
 * destination and lend themselves for sorting much easier).
 */
.sortArrival .destination.outbound {
  display     : inline-block;
  width       : 338px;
  border      : none;
}

.sortArrival .countdown {
  display     : inline-block;    /* No line breaks for each arrival time */
  margin      : 5px 0px 5px 8px;
  padding     : 5px;
  width       : 65px;            /* Fits FOUR arrival orbs per line */
  border      : 2px solid black;
  font-size   : 0.65em;
  text-align  : center;
  border-radius : 5px;
}

/*
 * Specific styling associated with each "mode" an arrival can be in.
 * I tried combining these with the ones defined for the tabular-div setup,
 * but the browsers were not cascading very nicely, so this way brute-forces it.
 */
.sortArrival .countdown.scheduled {
  background-color : #dddddd;
}

.sortArrival .countdown.predicted {
  background-color : #222222;
  color            : white;
}

.sortArrival .countdown.approaching {
  background-color : #00ffff;
}

.sortArrival .countdown.arriving {
  background-color : #00ff00;
}

.sortArrival .countdown.departing {
  background-color : #ff0000;
}


/*
 * Needed to cascade into ALL elements of the sublists
 */
.sortArrival ul {
  list-style : none;
  padding-left : 0px;
}

/*
 * The help / about information will be displayed as a popup (thanks to jQuery).
 * The inspiration for these selectors is from:
 * 
 * http://creativeindividual.co.uk/2011/02/create-a-pop-up-div-in-jquery/
 */
#disclaimer {
  display    : none;
  position   : absolute;
   
  /*
   * The right/top values are to make this all mesh nicely with the 
   * heading toolbar. If that changes size, then so should these!
   */
  font-family: Tahoma, Arial, sans-serif;
  right      : 60px;
  top        : 48px;
  width      : 850px;
  padding    : 5px 15px;
  background : #222222;
  color      : white;
  border     : 2px solid white;
  font-size  : 0.8em;
  box-shadow : 5px 5px 3px gray;
}

#disclaimer .layout {
  font-size : 1em;
  float : left;
  margin-right : 5px;
  padding : 5px;
  clear : both;
  width : 60px;
  text-align : center;
}

.layout.scheduled {
  background-color : #dddddd;
  color : black;
}

.layout.predicted {
  background-color : #222222;
  color : white;
}

.layout.approach {
  background-color : #00ffff;
  color : black;
}

.layout.arrive {
  background-color : #00ff00;
  color : black;
}

.layout.depart {
  background-color : #ff0000;
  color : black;
}

/*
 * Make the settings pane appear on a hover exactly the same as the
 * information / disclaimer div.
 */
#settingsPane {
  display    : none;
  position   : absolute;
  font-family: Tahoma, Arial, sans-serif;
  right      : 5px;
  top        : 48px;
  width      : 300px;
  padding    : 5px 15px;
  background : #222222;
  color      : white;
  border     : 2px solid white;
  font-size  : 0.8em;
  box-shadow : 5px 5px 3px gray;
}

/*
 * Place the additional tabs zone and make it show next to the 
 * arrival information.
 * Since this is created in the tabs widget, we need to override the
 * selectors as they're named from the theme / jQuery UI world.
 */
#suppContent {
/*  display : inline-block;*/
  float   : right;
  margin-top: 0px;
  padding-right: 5px;
  width   : 500px;
  clear   : none;
  overflow-y : scroll;
}

#suppContent .ui-tabs-nav {
  font-size : .7em;
  font-weight: bolder;
}

#suppContent .ui-tabs-panel {
  padding : 2px;
}

#suppContent .ui-state-disabled {
  display : none;  /* Disabled tabs will NOT be viewable */
}

/*
 * Scale down the font size in the alerts area, as the tabs widget decides it
 * wants gigantic fonts.
 */
#alertsArea {
  font-family : Tahoma, Arial, sans-serif;
  font-size   : .8em;
  margin      : 10px;
}

#suppContent canvas {
  border  : 1px solid black;
  margin  : 2px;
}
